var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var __extends = this && this.__extends || function __extends(t, e) { 
 function r() { 
 this.constructor = t;
}
for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
r.prototype = e.prototype, t.prototype = new r();
};
var GameView = (function (_super) {
    __extends(GameView, _super);
    function GameView() {
        var _this = _super.call(this) || this;
        _this._slideDistance = 428;
        _this.modal = false;
        return _this;
    }
    GameView.prototype.childrenCreated = function () {
        var _this = this;
        _super.prototype.childrenCreated.call(this);
        var loadingView = app.ui.getPopup(LoadingView);
        loadingView && app.ui.rmPopup(loadingView);
        Game.inst.nowPlayerCount = GameConstant.PlayersCount;
        this.gp_dev_tools.visible = app.storager.get('vconsole') === 'show';
        this.btn_gameover.addEventListener(egret.TouchEvent.TOUCH_TAP, function () {
            GameConstant.TrackLength = 200; //
        }, this);
        this.dieRot.addEventListener("touchTap", function () {
            //this.
        }, this);
        // let skins = app.status.skinItemData.filter(v => (v.price.type === 3 || v.price.type === 1) && app.pp.havingSkinIDs.indexOf(v.id) < 0);
        // // console.log(skins);
        // let randomSkin = Utils.randomInArr(skins);
        // this.img_recommend_ball.source = randomSkin.thumb;
        // this.btn_try.addEventListener("touchTap", () => {
        // 	Common.showRAD('adSkin', () => { Game.inst.player.setSkin(randomSkin.id); });
        // }, this);
        // this.img_recommend_ball.addEventListener("touchTap", () => {
        // 	Common.showRAD('adSkin', () => { Game.inst.player.setSkin(randomSkin.id); });
        // }, this);
        // this.stage.addEventListener("touchBegin", (e: egret.TouchEvent) => {
        // 	if (e.target !== this.btn_try) {
        // 		this.group_swipe.removeFromParent();
        // 		this.gp_recommend.removeFromParent();
        // 	}
        // }, this);
        // this.btn_close.addEventListener("touchBegin", (e: egret.TouchEvent) => {
        // 	this.group_swipe.removeFromParent();
        // 	this.gp_recommend.removeFromParent();
        // }, this);
        // if (!app.ad.hasRAD() || !app.ad.suportAD()) {
        // 	console.log("ad not ready");
        // 	this.gp_recommend.removeFromParent();
        // }
        this.stage.addEventListener("touchBegin", function () {
            _this.group_swipe.removeFromParent();
        }, this);
        this.txt_current_level.text = "CurrentLevel: " + app.pp.currentLevel;
        egret.Tween.get(this.img_finger, { loop: true }).to({ x: 401 }, 1000, egret.Ease.sineInOut).to({ x: 0 }, 1000, egret.Ease.sineInOut);
        egret.Tween.get(this.img_wheel, { loop: true }).to({ rotation: 360 }, 1500);
        this.initGraphics();
        Game.inst.onProgressUpdate = this.setProgress.bind(this);
        RES.loadGroup('end');
    };
    GameView.prototype.initGraphics = function () {
        this.validateNow(); //验证并更新此对象的属性和布局，如果需要的话重绘对象
        var rect = this.rect = new egret.Shape();
        // rect.x = this.group_progressbar.x - this.group_progressbar.width;
        // rect.y = this.group_progressbar.y;
        rect.graphics.clear();
        rect.graphics.beginFill(0x00ffff, 1);
        // rect.graphics.drawRect(0, 0, this.group_progressbar.width, this.group_progressbar.height);
        this.addChild(rect);
        // this.img_progressbar_yellow.mask = rect;
    };
    /**progress from 0-1 */
    GameView.prototype.setProgress = function (distance) {
        // if (percentage < 0 || percentage > 1) {
        // 	console.warn("parameters error");
        // 	return;
        // }
        // this.rect.x = this.group_progressbar.x - this.group_progressbar.width + this._slideDistance * percentage;
        // this.img_wheel.x = this._slideDistance * percentage;
        this.label_distance.text = Math.round(distance) + "";
    };
    return GameView;
}(BasePopup));
__reflect(GameView.prototype, "GameView");
//# sourceMappingURL=GameView.js.map